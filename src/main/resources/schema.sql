-- PUBLIC.FILM definition

-- Drop table

-- DROP TABLE PUBLIC.FILM;

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	FILM_ID INTEGER NOT NULL,
	NAME VARCHAR_IGNORECASE,
	DESCRIPTION VARCHAR_IGNORECASE,
	RELEASEDATE DATE,
	DURATION INTEGER,
	RATING_ID INTEGER,
	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_20 ON PUBLIC.FILM (FILM_ID);



-- PUBLIC.MY_USER definition

-- Drop table

-- DROP TABLE PUBLIC.MY_USER;

CREATE TABLE IF NOT EXISTS PUBLIC.MY_USER (
	USER_ID INTEGER NOT NULL,
	EMAIL VARCHAR_IGNORECASE,
	LOGIN VARCHAR_IGNORECASE,
	NAME VARCHAR_IGNORECASE,
	BIRTHDAY DATE,
	CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_2 ON PUBLIC.MY_USER (USER_ID);


-- PUBLIC.FRIENDSHIP definition

-- Drop table

-- DROP TABLE PUBLIC.FRIENDSHIP;

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP (
	REQUESTER INTEGER NOT NULL,
	RECIPIENT INTEGER NOT NULL,
	APPROVED BOOLEAN,
	CONSTRAINT FRIENDSHIP_PK PRIMARY KEY (REQUESTER,RECIPIENT),
	CONSTRAINT FRIENDSHIP_FK FOREIGN KEY (REQUESTER) REFERENCES PUBLIC.MY_USER(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
    CONSTRAINT FRIENDSHIP_FK_1 FOREIGN KEY (RECIPIENT) REFERENCES PUBLIC.MY_USER(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_B ON PUBLIC.FRIENDSHIP (REQUESTER,RECIPIENT);


-- PUBLIC.GENRE definition

-- Drop table

-- DROP TABLE PUBLIC.GENRE;

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	NAME VARCHAR_IGNORECASE NOT NULL,
	ID INTEGER NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_4 ON PUBLIC.GENRE (ID);


-- PUBLIC.LIKES definition

-- Drop table

-- DROP TABLE PUBLIC.LIKES;

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
	USER_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CONSTRAINT LIKES_PK PRIMARY KEY (USER_ID,FILM_ID),
	CONSTRAINT LIKE_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.MY_USER (USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
    CONSTRAINT LIKE_FK_1 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_45 ON PUBLIC.LIKES (USER_ID,FILM_ID);


-- PUBLIC.RATING definition

-- Drop table

-- DROP TABLE PUBLIC.RATING;

CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
	NAME VARCHAR_IGNORECASE,
	ID INTEGER NOT NULL,
	CONSTRAINT RATING_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_C ON PUBLIC.RATING (ID);


-- PUBLIC.FILM_TO_GENRE definition

-- Drop table

-- DROP TABLE PUBLIC.FILM_TO_GENRE;

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_TO_GENRE (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_TO_GENRE_PK PRIMARY KEY (FILM_ID,GENRE_ID),
	CONSTRAINT FILM_TO_GENRE_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FILM_TO_GENRE_FK_1 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY_KEY_2B ON PUBLIC.FILM_TO_GENRE (FILM_ID,GENRE_ID);